1
00:00:00,930 --> 00:00:05,910
Ahora vamos a empezar a trabajar con la programación orientada a objetos y con las clases lo que vamos

2
00:00:05,910 --> 00:00:11,160
a ver ahora acerca de las clases también lo podemos hacer en JavaScript nativo es decir no necesitamos

3
00:00:11,160 --> 00:00:13,950
Taipe scrip como para hacerlo.

4
00:00:13,950 --> 00:00:21,880
Lo único que si no utilizamos Tiber Creep quizá el navegador antiguo no funcione y quizás quizá no seguro.

5
00:00:21,900 --> 00:00:29,940
El tipado de variables el tipado estático no funcionará así que lo que viene siendo las clases y todo

6
00:00:29,940 --> 00:00:35,520
lo que vamos a ver ahora casi todo funciona en JavaScript puro Java nativo sería Programación Orientada

7
00:00:35,520 --> 00:00:41,130
a Objetos ya con los nuevos estándares de JavaScript pero algunas cositas no funcionarán así que por

8
00:00:41,130 --> 00:00:45,570
eso lo vamos a ver dentro de Type scrip porque ekipos va a funcionar todo y tenemos una programación

9
00:00:45,570 --> 00:00:50,240
orientada a objetos mucho más estable.

10
00:00:50,310 --> 00:00:55,920
Así que para este ejemplo vamos a empezar a trabajar con las clases valiã así que me voy a crear un

11
00:00:56,370 --> 00:00:59,340
nuevo fichero que se va a llamar simplemente

12
00:01:03,340 --> 00:01:12,310
camiseta .3 y aquí voy a explicar las clases vale simplemente en este fichero una clase podríamos decir

13
00:01:12,310 --> 00:01:17,480
que es un molde con el cual podemos crear infinidad de objetos con características parecidas.

14
00:01:17,530 --> 00:01:19,960
De acuerdo entonces en una clase

15
00:01:23,380 --> 00:01:26,890
tenemos lo que viene siendo la clase que es el molde

16
00:01:29,770 --> 00:01:36,110
molde del objeto sobre el cual voy a crear un montón de objetos con características similares.

17
00:01:36,130 --> 00:01:38,740
Luego vamos a tener propiedades

18
00:01:41,470 --> 00:01:43,090
que son esas características

19
00:01:46,510 --> 00:02:01,290
del objeto y luego vamos a tener métodos que son funciones o acciones que va a hacer el objeto del objeto.

20
00:02:01,510 --> 00:02:07,300
Esas tres partes son las que se dividen en la programación orientada a objetos más básica en este caso

21
00:02:07,390 --> 00:02:12,010
IPES scrip pero en cualquier lenguaje de programación esto es así entonces la clase es el molde.

22
00:02:12,010 --> 00:02:16,510
Las propiedades son las características que tiene el objeto y los métodos son las acciones o las funciones

23
00:02:16,510 --> 00:02:22,150
que puede ejecutar ese objeto y que pueda hacer entonces para entender lo que es la programación orientada

24
00:02:22,150 --> 00:02:23,380
a objetos y cómo funciona.

25
00:02:23,410 --> 00:02:29,970
Vamos a definir nuestra primera clase vamos a crear una clase que se va a llamar camiseta.

26
00:02:29,980 --> 00:02:36,190
La clase debe llamarse igual que el fichero y se debe utilizar el Camel Cash siempre que sea posible

27
00:02:36,620 --> 00:02:46,630
vale Camel keys o empezar por mayúscula y ir haciendo unas cintas de Camel keys o que se llaman exactamente

28
00:02:46,630 --> 00:02:50,800
igual que el fichero en este caso si el fichero se llama camiseta pues lo normal es empezar con mayúscula

29
00:02:50,830 --> 00:02:52,750
el nombre de la clase.

30
00:02:53,360 --> 00:03:01,330
Vale ya tengo mi clase definida bien y una camiseta qué características o qué atributos o propiedades

31
00:03:01,420 --> 00:03:08,050
suele tener pues puede tener una propiedad que puede ser el color.

32
00:03:08,200 --> 00:03:15,700
Vale vamos a poner este comentario aquí porque vamos a definir las propiedades va a tener una característica

33
00:03:15,700 --> 00:03:25,950
que puede ser el color que puede ser de tipo string vale el color base un string y además le vamos a

34
00:03:25,950 --> 00:03:31,560
indicar la visibilidad de un atributo público eso lo explicaré luego pero simplemente para definir una

35
00:03:31,560 --> 00:03:36,690
variable dentro de una clase quedate con que hay que poner públic el nombre la variable y el tipado

36
00:03:37,500 --> 00:03:49,610
puede tener un color la camiseta puede tener un modelo pues si es una camiseta de un tipo en específico

37
00:03:49,750 --> 00:03:58,170
que también va a ser un extremo puede tener una marca que va a en un extremo puede tener una talla

38
00:04:01,410 --> 00:04:05,270
que también será un estreno y puede tener un precio

39
00:04:09,530 --> 00:04:14,740
más dentro de las propiedades que tiene una camiseta son el color el modelo de manga corta de manga

40
00:04:14,740 --> 00:04:19,060
larga la marca la talla y el precio.

41
00:04:19,070 --> 00:04:23,210
Vale el precio sería una Amber.

42
00:04:23,290 --> 00:04:27,520
Esas son las propiedades características o atributos que puede tener esta clase.

43
00:04:27,520 --> 00:04:32,590
Vale que al final son variables y luego podríamos tener una serie de métodos que cambien el valor de

44
00:04:32,590 --> 00:04:37,080
esa propiedad vale en este caso lo hemos puesto públic a todas las propiedades.

45
00:04:37,120 --> 00:04:44,730
Esto significa que cuando yo instancia cuando yo instancia este objeto cuando yo haga un new camiseta

46
00:04:45,240 --> 00:04:52,360
cuando he visto cierta clase y la meta dentro de una variable voy a tener disponibles todas estas propiedades

47
00:04:52,360 --> 00:05:01,830
para modificarla de acuerdo podré cambiar todos esos valores y yo me cargo este fichero dentro de mi

48
00:05:01,840 --> 00:05:07,930
scrip camiseta puntos J.S. vamos a estar practicando con esto voy a cortar la compilación y vuelvo a

49
00:05:07,930 --> 00:05:12,550
ejecutarla si yo hago un consolé log

50
00:05:19,510 --> 00:05:27,550
de camiseta vamos a ver que realmente no hay nada efectivamente un objeto vacío.

51
00:05:27,540 --> 00:05:35,000
Si yo quisiera asignarle un valor a estas propiedades pues tendría que hacerlo así añadirlo por defecto

52
00:05:36,050 --> 00:05:41,360
o incluso quedarme un constructor que sólo vamos a ver luego pero yo con camiseta podría asignarle un

53
00:05:41,360 --> 00:05:47,720
valor desde aquí perfectamente camiseta punto color vale a este objeto que se llama camiseta le voy

54
00:05:47,720 --> 00:05:58,760
a asignar un valor que va a ser rojo Balet camiseta punto para acceder a la propiedad modelo manga larga

55
00:06:03,280 --> 00:06:07,780
camiseta punto marca

56
00:06:11,160 --> 00:06:16,830
Nike camiseta punto talla

57
00:06:19,550 --> 00:06:22,730
L y camiseta.

58
00:06:22,840 --> 00:06:23,410
Punto.

59
00:06:23,410 --> 00:06:24,120
Precio

60
00:06:28,070 --> 00:06:31,660
por ejemplo 10.

61
00:06:31,850 --> 00:06:37,080
Vale sí yo ahora mismo hago el consuelo de camiseta me aparece un objeto con todas esas propiedades.

62
00:06:37,100 --> 00:06:37,530
Vale.

63
00:06:37,640 --> 00:06:48,900
Y si yo me creo otra variable que se llame de otra forma otro objeto que se llame en este caso playera

64
00:06:49,520 --> 00:06:58,350
pues puedo utilizar ese objeto y darle los valores que yo quiera a su propiedad azul manga corta

65
00:07:00,790 --> 00:07:03,350
Adidas L.

66
00:07:03,390 --> 00:07:05,220
Y 15 euros.

67
00:07:05,220 --> 00:07:10,990
Guardo actualizo la pantalla y el consuelo solamente me lo hace de camiseta.

68
00:07:11,010 --> 00:07:19,760
Pero también de paso playera que es el segundo objeto pues también me muestra sus valores valentón.

69
00:07:19,770 --> 00:07:26,320
Yo estoy creando objetos utilizando mi molde que es mi clase.

70
00:07:26,430 --> 00:07:34,020
Estos son las propiedades pero lo más común es que yo si estas propiedades fueran privadas realmente

71
00:07:34,080 --> 00:07:35,310
me va a seguir funcionando.

72
00:07:35,310 --> 00:07:41,310
Es decir la visibilidad de una propiedad puede ser públic protected o private Public y significa que

73
00:07:41,310 --> 00:07:46,380
podemos acceder a las propiedades y métodos desde cualquier lugar de la clase actual de clase que la

74
00:07:46,380 --> 00:07:53,610
hereda y desde otras clases protégete significa que se puede acceder al atributo método lo que sea de

75
00:07:53,610 --> 00:07:56,510
la clase que lo define y de cualquier otra parte.

76
00:07:56,780 --> 00:08:02,640
Otra clase que herede esa es la misma clase y Private significa que los atributos o métodos solamente

77
00:08:02,650 --> 00:08:05,340
son accesibles desde la clase que los define.

78
00:08:05,340 --> 00:08:11,190
Es decir justo desde dentro de la clase no podría hacer este 7-O de propiedades como estoy haciendo

79
00:08:11,190 --> 00:08:11,600
aquí.

80
00:08:11,640 --> 00:08:16,080
Vale fíjate que me dice que la propiedad modelo es privada todas las propiedades son privadas.

81
00:08:16,170 --> 00:08:23,250
Por tanto no puedo asignarle el valor desde fuera de la clase entonces para solucionar esto lo que se

82
00:08:23,250 --> 00:08:27,340
suele utilizar es un método para que interactúe con esas propiedades.

83
00:08:28,100 --> 00:08:36,060
Entonces podemos crear métodos vamos a crear un método para un método público para hacer un cambio del

84
00:08:36,060 --> 00:08:37,320
color cambia el color

85
00:08:40,100 --> 00:08:48,210
vale cambia el color y yo le puedo pasar el color que yo quiero y puedo hacer días para acceder a esta

86
00:08:48,210 --> 00:08:55,020
misma clase punto para acceder a la propiedad color y si no el valor que yo quiero en este caso el color

87
00:08:55,020 --> 00:08:58,810
que me llega y luego puedo crear otro método para devolver ese color.

88
00:08:58,830 --> 00:09:09,020
Públic Get color para conseguir el color no le pasa nada y simplemente hago un RETURN dis punto color.

89
00:09:09,120 --> 00:09:13,020
De esta forma esta propiedad ya no puedo acceder.

90
00:09:14,220 --> 00:09:16,600
Tengo que trabajar de manera diferente.

91
00:09:16,980 --> 00:09:26,070
Con esto vale me puedo distanciar mi clase crear el objeto camiseta y hacer camiseta.

92
00:09:26,070 --> 00:09:26,670
Punto.

93
00:09:26,670 --> 00:09:27,630
Cambiar el color.

94
00:09:29,210 --> 00:09:31,240
Y aquí estoy 7 ando.

95
00:09:31,410 --> 00:09:37,500
Vale puedo incluso ponerle el nombre ser color porque es como se suele llamar un método set y Jet Set

96
00:09:37,500 --> 00:09:44,660
color para darle un valor a esa propiedad y le paso el color que yo quiera en mi caso rojo vale.

97
00:09:44,790 --> 00:09:47,630
Y luego si quiero mostrar ese color.

98
00:09:47,940 --> 00:09:55,730
Vale pues tendré que hacer camiseta Puntoticket color y aquí tengo yo el color de la camiseta.

99
00:09:55,770 --> 00:09:59,240
Realmente este método ahora lo usaremos.

100
00:09:59,520 --> 00:10:05,070
Vale también voy a utilizar este mismo método cambiar el color en la otra en el otro objeto playera

101
00:10:05,070 --> 00:10:09,680
punto cero color en dicho que se llama el método.

102
00:10:09,710 --> 00:10:14,900
Aquí hay que cambiarlo si el color y el color azul.

103
00:10:14,910 --> 00:10:24,240
Ahora vamos a ver a ver que si actualizo la pantalla me muestra mis dos objetos solamente con esa propiedad

104
00:10:24,240 --> 00:10:29,570
salteada y hemos utilizado el método que hemos creado el método es el color.

105
00:10:29,820 --> 00:10:35,520
Si yo quisiera sacar solamente el color de la camiseta quisiera sacar solamente ese valor pues puedo

106
00:10:35,520 --> 00:10:42,540
hacer Goeth color vale utilizo ese método que es un método que lo que hace es interactuar con esa propiedad

107
00:10:42,930 --> 00:10:46,780
vale y me saca el valor.

108
00:10:47,040 --> 00:10:50,670
Así que de esta manera podemos crear el método setter y meter que interactúen.

109
00:10:50,670 --> 00:10:57,690
O incluso método que muchas funcionalidades que cojan valores que hagan peticiones allá o lo que sea

110
00:10:58,170 --> 00:11:03,060
realmente si tuviéramos una entidad de otro tipo en este caso hemos elegido camiseta pero si tuviéramos

111
00:11:03,060 --> 00:11:08,750
una entidad que fuera coche podríamos tener un método que sea acelerar.

112
00:11:08,750 --> 00:11:14,850
Vale que hace una funcionalidad otro método que sea frenar y así vale los medios simplemente son acciones

113
00:11:14,850 --> 00:11:23,580
del objeto llevándonos esto a la vida real de una clase suele usarse mucho en Liberia y frenemos como

114
00:11:23,580 --> 00:11:29,530
angular por ejemplo en la cual utilizamos clases para todo para crear el componente para tener los métodos

115
00:11:29,530 --> 00:11:35,190
dentro de un componente para tener esas propiedades dentro de un componente crear un servicio vale.

116
00:11:35,190 --> 00:11:39,030
Los servicios son clase e igual que ésta pero

117
00:11:41,730 --> 00:11:45,430
lo que hacen es que cada uno de esos métodos interactúe interactúa con una entidad.

118
00:11:45,450 --> 00:11:50,910
Por ejemplo si tengo un servicio para productos pues tengo un montón de métodos que me hacen peticiones

119
00:11:50,910 --> 00:11:56,100
Ayax relacionadas con el tema de los productos guardar un producto o sacar un listado de productos y

120
00:11:56,100 --> 00:11:56,740
todo eso.

121
00:11:57,000 --> 00:12:02,120
Y esa es la funcionalidad real que suele tener la clase y todo eso lo iremos viendo en la parte angular

122
00:12:02,130 --> 00:12:03,330
que veremos más adelante.

123
00:12:04,860 --> 00:12:09,820
Así que de momento ya hemos visto lo más básico acerca de programación orientada a objetos como crear

124
00:12:09,840 --> 00:12:15,690
un objeto como crear métodos y propiedades en la siguiente clase veremos que son los constructores y

125
00:12:15,690 --> 00:12:16,470
cómo funciona.
