1
00:00:00,720 --> 00:00:05,550
Hasta ahora estamos viendo cómo trabajar con angular y con los componentes y con todo dentro de una

2
00:00:05,550 --> 00:00:09,710
misma página es decir bajo una misma o R.L y en la misma página.

3
00:00:10,350 --> 00:00:16,350
Pero lo que vamos a hacer ahora va a ser configurar un sistema de rutas para poder tener una página

4
00:00:16,380 --> 00:00:24,160
por componente por ejemplo poder tener una página que marcas vale tener otra página que sea

5
00:00:27,120 --> 00:00:36,720
deportivas y tener una página de contacto etcétera tener páginas limpias en la web.

6
00:00:36,750 --> 00:00:41,460
Vale entonces vamos a ver cómo configurar el router para no estar trabajando siempre en la misma página

7
00:00:41,640 --> 00:00:46,900
sino que hacer un sistema de navegación en el cual podamos navegar de manera dinámica e instantánea

8
00:00:46,920 --> 00:00:50,800
entre las diferentes páginas que va a haber en la web de acuerdo.

9
00:00:50,820 --> 00:00:55,590
Una de las cosas interesantes que vamos a ver que podemos hacer que un componente no solamente sea un

10
00:00:55,590 --> 00:01:01,890
trozo de la pantalla o un trozo de la página que haga una funcionalidad pequeña como esto sino que podemos

11
00:01:01,890 --> 00:01:08,190
hacer que un componente sea una página de sí de la web es decir que tengamos un componente de contacto

12
00:01:08,190 --> 00:01:10,350
y acceda a él mediante esta web R.L.

13
00:01:10,410 --> 00:01:15,990
De acuerdo eso se puede hacer entonces vamos a ver cómo configurar el sistema de rutas el routine angular

14
00:01:16,320 --> 00:01:22,500
para trabajar con la ruta y crear una ruta para cada componente y hacer diferentes páginas en nuestra

15
00:01:22,680 --> 00:01:23,010
web.

16
00:01:23,010 --> 00:01:27,060
Esto es algo fundamental cuando vamos a desarrollar una aplicación completa.

17
00:01:27,060 --> 00:01:32,910
El primer paso para configurar esto es cerrar el resto de componentes y archivos que teníamos abierto

18
00:01:32,910 --> 00:01:38,190
hasta ahora porque vamos a empezar desde cero.

19
00:01:38,970 --> 00:01:44,820
Lo primero que tenemos que hacer es asegurarnos que en el índex punto HTML de aquí tenemos esto puesto

20
00:01:44,820 --> 00:01:47,250
aquí en base HR-V.

21
00:01:47,400 --> 00:01:55,290
Si no tenemos esto puesto el router no va a funcionar así que importantisimo revisar siempre que tenemos

22
00:01:55,290 --> 00:02:00,830
el base HR-V puesto en el índex punto HTML.

23
00:02:00,840 --> 00:02:09,050
El siguiente paso sería crear el fichero a Pepe Rutini en la raíz de Pepe controlase a Pepe punto routing

24
00:02:09,250 --> 00:02:10,680
punto ts.

25
00:02:11,100 --> 00:02:16,140
Dentro de este archivo va toda la configuración de rutas de nuestra aplicación de angula de acuerdo

26
00:02:16,150 --> 00:02:21,570
aquí vamos a configurar el router y aparte vamos a dar de alta la nueva ruta que vayamos teniendo en

27
00:02:21,570 --> 00:02:22,410
nuestra obligación.

28
00:02:22,410 --> 00:02:25,200
Las nuevas wereables de nuestra web.

29
00:02:25,260 --> 00:02:26,650
Entonces qué tiene este fichero.

30
00:02:26,650 --> 00:02:32,970
Pues lo primero que tenemos que hacer es importar los módulos del router de acuerdo vamos a poner aquí

31
00:02:32,970 --> 00:02:38,840
comentarios e importar módulos del router angular.

32
00:02:38,940 --> 00:02:49,050
Vale vamos a hacer un import de un módulo que se llama módulos Wiz providers vale que es un módulo interno

33
00:02:49,050 --> 00:02:51,100
de ãngulo al que nos va a permitir trabajar con el robot.

34
00:02:51,110 --> 00:02:58,830
Esto está from arroba angular Barreal Core y también tenemos que importar el resto de módulos de rutas

35
00:02:58,830 --> 00:03:08,810
y clases también como por ejemplo el objeto brutes como la clase Routes y el módulo Rutter Module from

36
00:03:08,860 --> 00:03:16,230
y el paquete sería esta vez el angular barra Rutter perfecto y tenemos los importes.

37
00:03:16,260 --> 00:03:23,160
Ahora tenemos que importar los componentes vale para hacer una página para cada componente.

38
00:03:23,160 --> 00:03:29,610
Entonces vamos a hacer un import de cada uno de los componentes vamos a importar el componente de zapatillas

39
00:03:29,690 --> 00:03:43,270
el videojuego y el de cursos ok entonces cómo hace un import de zapatillas component que está from dentro

40
00:03:43,270 --> 00:03:57,010
de la carpeta punto barra zapatillas barra zapatillas punto componente hicieron un punto y coma y ahí

41
00:03:57,010 --> 00:04:01,210
tendría yo mi componente de zapatillas importado.

42
00:04:01,210 --> 00:04:07,810
Ahora voy a importar mi otro componente que va a ser el componente de videojuego videojuego component

43
00:04:09,090 --> 00:04:19,070
from y está en el directorio actual barra videojuego que es la carpeta que contiene ese componente y

44
00:04:19,070 --> 00:04:25,780
el archivo sería vídeojuego apuntó components.

45
00:04:26,090 --> 00:04:34,550
Cierro con punto y coma y voy a importar también el otro componente que va a ser el componente cursos.

46
00:04:36,150 --> 00:04:49,380
Cursos components from Tobarra cursos barra cursos apuntó component y hicieron público.

47
00:04:49,380 --> 00:04:52,040
Ya tengo mis componentes importados.

48
00:04:52,110 --> 00:04:59,230
Ahora voy a crear una raíz de configuración de las rutas.

49
00:04:59,460 --> 00:05:05,130
Aquí es donde yo voy a dar de alta toda mi nueva ruta y donde voy a configurar todas esas rutas bien

50
00:05:05,130 --> 00:05:12,150
para esto voy a crear una constante porque va a ser una variable que no vamos a poder modificar programáticamente

51
00:05:12,150 --> 00:05:17,630
sino que siempre va a estar fija entonces va a ser una constante que se va a llamar a Pepe brutes iba

52
00:05:17,970 --> 00:05:23,940
iba a ser de tipo Routes es decir que lo objetos que yo iba a meter dentro de este array van a tener

53
00:05:23,940 --> 00:05:31,020
que cumplir el formato que tiene una ruta de angular de acuerdo tenemos que cumplir cierto formato.

54
00:05:31,120 --> 00:05:37,350
Vale entonces vamos a meter objetos Jayson y dentro de cada uno de estos objetos Jayson vamos a indicarle

55
00:05:37,410 --> 00:05:46,950
el paz vale y luego vamos a indicarle el componente vale como indicarle qué ruta vamos a dar de alta

56
00:05:47,010 --> 00:05:54,240
como se va a llamar en el navegador es decir si es contacto contacto o como se llamen y luego el componente

57
00:05:54,240 --> 00:06:00,390
que va a cargar cuando esa ruta se ejecute en nuestro navegador vale en este caso vamos a crear una

58
00:06:00,390 --> 00:06:04,740
ruta inicial que va a estar vacía que va a ser la que siempre se va a cargar por default cuando no pongamos

59
00:06:04,740 --> 00:06:09,090
nada en la web Relay que va a cargar el componente zapatillas

60
00:06:11,450 --> 00:06:18,330
componentes vale o incluso podríamos crear un componente para probarlo aquí en nuestra consola podemos

61
00:06:18,330 --> 00:06:25,830
ejecutar el comando en general de componentes que generamos este nuevo componente y lo vamos a utilizar

62
00:06:25,830 --> 00:06:29,420
como el fichero como el componente que vamos a cargar.

63
00:06:29,620 --> 00:06:35,550
Si revisamos el módulo importado de este componente así que lo vamos a importar también el router en

64
00:06:35,550 --> 00:06:43,530
el router lo utilizo por aquí y voy a utilizarlo como el componente que se va a cargar al principio

65
00:06:45,280 --> 00:06:48,430
en la ruta vacía en la ruta barra.

66
00:06:48,530 --> 00:06:53,520
Ese componente va a ser el que se va a cargar como Jon luego vamos a tener otra ruta para cada uno de

67
00:06:53,520 --> 00:06:54,270
los componentes.

68
00:06:54,270 --> 00:07:02,340
Por ejemplo la ruta con Paz zapatillas va a cargar el componente evidentemente zapatillas component

69
00:07:03,720 --> 00:07:14,070
luego otra ruta que va a ser otro objeto Yeison va a ser el Paz será videojuego y el componente pues

70
00:07:14,070 --> 00:07:20,820
será videojuego componentes y luego tendremos otra ruta en nuestra aplicación cuyo paz va a ser

71
00:07:23,800 --> 00:07:32,410
cursos y el componente que va a cargar va a ser cursos component y luego vamos a tener otra ruta que

72
00:07:32,410 --> 00:07:38,890
va a ser la ruta de cuatro cero cuatro vale que esa ruta hay que definirla siempre siempre siempre la

73
00:07:38,890 --> 00:07:45,040
última porque si no va a fallar todo toda la ruta el resto de rutas y se define con los dos asteriscos

74
00:07:45,070 --> 00:07:51,100
y entonces la ruta cuatro cero cuatro cuando no encuentra ninguno de los componentes cuando la ruta

75
00:07:51,250 --> 00:07:55,930
que nosotros cargamos en nuestro navegador no está asociada a ningún componente se ejecuta esta ruta

76
00:07:55,990 --> 00:08:02,880
y carga el componente que yo le diga en este caso el componente que cargará será el componente perfecto

77
00:08:02,910 --> 00:08:05,230
pues ya tenemos nuestra configuración de rutas también.

78
00:08:05,350 --> 00:08:08,530
Ahora lo que nos queda es exportar el módulo

79
00:08:11,640 --> 00:08:16,760
del routing Malen tendremos que exportar Esport Const.

80
00:08:16,940 --> 00:08:26,600
Vamos a exportar un par de variables una va a ser el aporte Rutter Routin providers que es el servicio

81
00:08:26,600 --> 00:08:32,450
del Rutter que va a ser de tipo N-I una red tipo Veny y que va a estar vacío esto va a ser un servicio

82
00:08:32,450 --> 00:08:37,340
del Rutter que necesitamos exportarlo y luego importarlo para que funcionen los servicios de ruta y

83
00:08:37,340 --> 00:08:37,790
tal.

84
00:08:37,880 --> 00:08:47,830
A nivel interno y vamos a exportar también otra constante que va a ser útil que va a ser el Module Wiz

85
00:08:47,870 --> 00:08:57,260
providers y esto lo vamos a dar el valor de Rutter Module punto for Rut y aquí en este método cargamos

86
00:08:57,560 --> 00:09:03,950
toda la configuración de nuestra ruta y la Damonte alta en el Ruti vale cargamos a Pepe Routes vale

87
00:09:04,040 --> 00:09:09,410
exportamos el servicio y exportamos el módulo vale de esta manera vamos a hacer que la configuración

88
00:09:09,410 --> 00:09:11,280
de nuestro router funcione.

89
00:09:11,450 --> 00:09:17,180
Ahora toda esta configuración está genial pero no va a funcionar si no la importamos en nuestro propio

90
00:09:17,180 --> 00:09:24,470
módulo .3 así que nos vamos a nuestro módulo .3 y aquí importamos nuestro módulo de rutas nuestra configuración

91
00:09:24,470 --> 00:09:36,170
hacemos un import de Rudin que es el módulo de Pepe Routin providers que es el servicio de rutas from

92
00:09:37,180 --> 00:09:42,760
Tobarra y el fichero sería a Pepe punto de rutina que es donde está toda la configuración viene entonces

93
00:09:42,860 --> 00:09:49,270
aquí en la parte del NG módulo y tenemos que cargar estos objetos de aquí el Routin y la PPerro ayer

94
00:09:49,510 --> 00:09:54,920
el routing como es un módulo tengo que cargarlo en los importes Routin ya iba toda la configuración

95
00:09:54,920 --> 00:10:01,850
de la ruta y luego providers como es un servicio y si yo quiero poder utilizar el router pues utilizarlo

96
00:10:01,850 --> 00:10:08,440
en otros componentes etcétera etcétera tener que cargarlo por aquí para que funcione el PP routing probarles

97
00:10:08,570 --> 00:10:16,820
cargó el servicio ya tengo mi ruta configurada cargando todo objeto y ahora si reviso mi navegador vemos

98
00:10:16,820 --> 00:10:23,290
que tenemos algún fallo o vamos a revisar qué fallo tenemos no indica un error si revisamos la consola

99
00:10:23,590 --> 00:10:30,620
dice que tenemos un error en la línea 2 del routing de la Peppe Routin y realmente el error es que estoy

100
00:10:30,710 --> 00:10:35,540
importando mal esta librería o este paquete de acuerdo este módulo.

101
00:10:35,540 --> 00:10:41,730
Esto acaba de poner Module with providers irrealmente Module with providers.

102
00:10:41,870 --> 00:10:48,200
Si ponemos esto mal no va a funcionar el router así que lo vamos a poner bien tanto aquí como aquí te

103
00:10:48,200 --> 00:10:51,500
dejo el error para que tu lo veas y sepas como solucionarlo.

104
00:10:51,590 --> 00:10:54,830
En el caso de que te suceda Vale ok.

105
00:10:54,870 --> 00:11:00,680
Y también tenemos otro error aquí porque esto se pone entre comillas los dos asteriscos también se ponen

106
00:11:00,770 --> 00:11:01,650
entre comillas.

107
00:11:01,760 --> 00:11:09,290
Cambiamos estas dos cositas revisamos que el compilador compila efectivamente todo va bien ahora y actualizamos

108
00:11:09,290 --> 00:11:14,930
la pantalla y ya todo funciona OK hay que revisar muy bien que estemos escribiendo todo correctamente

109
00:11:14,930 --> 00:11:17,130
porque si no nada va a funcionar.

110
00:11:17,130 --> 00:11:28,730
Vale ahora nuestro navegador si accedemos a la página por ejemplo barra nos carga esta página de aquí

111
00:11:29,030 --> 00:11:38,450
si accedo a otra página por ejemplo hemos dicho zapatillas pues también no va a haber ningún cambio

112
00:11:38,450 --> 00:11:40,850
la aplicación todo sigue funcionando exactamente igual.

113
00:11:41,270 --> 00:11:43,580
Entonces cómo puedo hacer que todo esto funcione.

114
00:11:43,650 --> 00:11:50,690
Pues para eso tengo que utilizar una directiva mágica una etiqueta mágica que es el router outlet esta

115
00:11:50,690 --> 00:11:56,450
etiqueta cuando nosotros la invoquemos y cuando invoquemos una ruta en nuestro navegador se va a encargar

116
00:11:56,450 --> 00:12:01,340
de ver qué ruta hay y qué componente va a cargar dentro de la etiqueta.

117
00:12:01,340 --> 00:12:08,660
Vale vamos a ver cómo ponerla en el PP compone un punto HTML en lugar de cargar un componente estático

118
00:12:08,900 --> 00:12:10,560
que lo cargo de manera fija.

119
00:12:10,640 --> 00:12:16,840
Voy a comentarlo vale y aquí voy a cargar el Rutter outlet

120
00:12:19,400 --> 00:12:28,670
Rutter outlet que es la etiqueta de mi sistema de rutas y dentro de esta etiqueta se va a cargar el

121
00:12:28,670 --> 00:12:34,750
componente que le estemos indicando a la ruta actual si estamos en la ruta zapatillas.

122
00:12:34,760 --> 00:12:38,090
Pues aquí se va a cargar el componente vinculado a esa ruta.

123
00:12:38,090 --> 00:12:43,190
En este caso de componentes componentes componente zapatillas componen sin cargo esta otra ruta.

124
00:12:43,190 --> 00:12:48,560
Pues automáticamente al RUT del Outlet se va a encargar de cargar justo aquí dentro el componente asociado

125
00:12:48,560 --> 00:12:52,240
a la ruta que esté cargando en la web R.L de mi navegador.

126
00:12:52,280 --> 00:13:00,890
Actualmente en ese momento entonces si yo guardo ahora y reviso mi navegador tenemos el componente zapatillas

127
00:13:00,890 --> 00:13:05,080
y si me voy a la ruta barra tengo el componente.

128
00:13:05,300 --> 00:13:12,560
Si me voy a la ruta vídeojuego tengo el componente de vídeojuego y además de componentes de zapatillas.

129
00:13:12,590 --> 00:13:23,700
Si me voy a la ruta cursos pues tengo el componente de cursos y si me voy a la ruta zapatillas pues

130
00:13:23,720 --> 00:13:27,070
tengo lo que tenía en el componente de zapatillas.

131
00:13:27,240 --> 00:13:29,630
O sea que todo está funcionando correctamente.

132
00:13:29,630 --> 00:13:35,060
Ya hemos visto cómo configurar el router vemos que la navegación funciona perfectamente y en la siguiente

133
00:13:35,570 --> 00:13:41,270
clase lo que vamos a hacer va a ser una navegación dinámica en la cual nosotros podamos saltar de una

134
00:13:41,400 --> 00:13:45,110
red a otra sin que el navegador recargue la página en ningún momento.
