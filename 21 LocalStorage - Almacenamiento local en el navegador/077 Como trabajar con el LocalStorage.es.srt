1
00:00:00,690 --> 00:00:05,700
Ya sabemos lo que es un objeto Yeison que es una manera muy óptima de organizar nuestra información

2
00:00:05,700 --> 00:00:09,870
dentro de nuestro de nuestro programa y cuando estemos desarrollando.

3
00:00:10,500 --> 00:00:16,920
Y bueno ahora vamos a hablar acerca del local histora el local histora es una manera de almacenar información

4
00:00:16,920 --> 00:00:24,960
dentro del navegador y que persista mientras que navegando en la página es como una memoria que permanece

5
00:00:25,020 --> 00:00:30,310
mientras que yo navego en mi página web de acuerdo es como una especie de sesión.

6
00:00:30,390 --> 00:00:36,030
Entonces vamos a ver cómo se utiliza el Local Storage así que vamos a crear un nuevo archivo

7
00:00:39,170 --> 00:00:51,600
controles que se va a llamar 34 locales Storage .3 y aquí es donde vamos a trabajar con el Local Storage.

8
00:00:55,310 --> 00:00:57,410
Vamos a cargar el archivo dentro de la página

9
00:01:00,450 --> 00:01:05,030
lo vamos a cargar por aquí vamos a comentar el otro para que no nos moleste.

10
00:01:10,350 --> 00:01:13,470
Va a ser archivo XXXIV Local Storage

11
00:01:16,980 --> 00:01:19,180
entonces qué es el Local Storage.

12
00:01:19,180 --> 00:01:22,810
Puedes con el Local Storage o con el HTML5 Web histora.

13
00:01:22,860 --> 00:01:28,200
Podemos guardar información en nuestro navegador web a modo de sesión y que esta información persista

14
00:01:28,410 --> 00:01:33,540
y esté disponible durante la navegación entre las diferentes páginas de nuestra página web o en nuestra

15
00:01:33,540 --> 00:01:35,430
aplicación web.

16
00:01:35,440 --> 00:01:40,680
El local electoral suele usarse muchísimo en aplicaciones desarrolladas completamente con Javascript

17
00:01:41,070 --> 00:01:45,600
por ejemplo en proyectos del stack que veremos en este mismo curso como cómo hacer un proyecto de este

18
00:01:45,600 --> 00:01:51,270
tipo con tecnologías como angular aunque también puede aplicarse a cualquier proyecto web que tengamos

19
00:01:51,540 --> 00:01:54,320
y compartir datos entre las diferentes secciones.

20
00:01:54,390 --> 00:02:00,450
Por ejemplo en una aplicación web monolítica clásica desarrollada con un lenguaje de Bakken como PHP

21
00:02:00,570 --> 00:02:08,880
o con cualquier otro el uso del local electoral no es como tal sino que se utiliza en las sesiones de

22
00:02:08,880 --> 00:02:09,570
las sesiones.

23
00:02:09,570 --> 00:02:14,100
Es como una memoria que también existe pero a nivel de Bakken vale.

24
00:02:14,160 --> 00:02:21,240
Sin embargo lo que hay detrás es una memoria que tenemos en nuestro navegador guardada y ahí se van

25
00:02:21,240 --> 00:02:24,230
guardando los datos que nosotros vamos persistiendo en el local storage.

26
00:02:24,570 --> 00:02:30,290
Entonces vamos a empezar a trabajar con el local aquí en nuestro navegador y en nuestro proyecto de

27
00:02:30,300 --> 00:02:31,490
JavaScript.

28
00:02:31,500 --> 00:02:37,500
Mira lo primero cómo podemos comprobar si el navegador es compatible porque claro muchas de las cosas

29
00:02:37,500 --> 00:02:43,110
que estamos viendo en el curso son de Macri saison de HTML5 son los nuevos estándares web que están

30
00:02:43,110 --> 00:02:43,740
saliendo.

31
00:02:43,780 --> 00:02:48,900
Entonces muchas veces utilizamos un navegador muy antiguo no vamos a tener compatibilidad con este tipo

32
00:02:48,900 --> 00:02:54,720
de cosas pues mira para comprobar si el lector H está disponible podemos hacer lo siguiente podemos

33
00:02:54,720 --> 00:02:56,360
hacer un ir.

34
00:02:56,760 --> 00:03:01,680
Podemos hacer un tipo de Storage Storage.

35
00:03:02,460 --> 00:03:03,560
Si esto lo encuentra.

36
00:03:03,560 --> 00:03:13,660
Si esto es diferente al definir pues entonces el local de storage está disponible Consol Autolog local

37
00:03:13,660 --> 00:03:21,510
Storage disponible con puntico y si no pues el local Storage no estará disponible.

38
00:03:25,480 --> 00:03:29,950
Incompatible con el local Storage

39
00:03:33,030 --> 00:03:39,020
guardo actualizo la pantalla y me dice que la historia está disponible en mi navegador web.

40
00:03:39,060 --> 00:03:44,750
De hecho este tipo de memoria yo la puedo administrar aquí en la parte de Application.

41
00:03:44,940 --> 00:03:51,180
Tenemos el Clear Storage que nos permite borrar el local que tengamos o el de ver que tengamos pero

42
00:03:51,180 --> 00:03:57,240
aquí tenemos más concretamente el local Storage desfile de acuerdo File sería nuestro dominio porque

43
00:03:57,240 --> 00:04:02,490
ahora mismo no estamos utilizando un dominio pero realmente hay un local histora por dominio de forma

44
00:04:02,490 --> 00:04:10,170
que no compartimos el local restorán con todos los sitios web que tengamos sino que en cada página web

45
00:04:10,200 --> 00:04:12,600
tenemos un local actoras diferente.

46
00:04:12,600 --> 00:04:19,050
Entonces aquí mismo tengo las claves o las keys y los valores la clave valor que hay guardada en mi

47
00:04:19,050 --> 00:04:19,930
local estolas.

48
00:04:20,080 --> 00:04:25,040
Yo podía guardar información y luego veremos cómo hacerlo bien.

49
00:04:25,300 --> 00:04:28,570
Entonces nuestro navegador sí que tenemos un disponible local histora.

50
00:04:28,860 --> 00:04:35,340
Ahora vamos a ver cómo guardar un dato en el local estolas esto es sencillo estoy aquí sería comprobar

51
00:04:35,370 --> 00:04:48,410
si el local lectora existe o si está disponible comprobar disponibilidad del local storage.

52
00:04:48,540 --> 00:04:57,210
Ahora vamos a ver cómo guardar datos en el navegador en el local Storage guardar datos como lo podemos

53
00:04:57,210 --> 00:05:02,400
hacer para almacenar datos y guardar nuevo elemento inicia en el local Torak lo que usaremos será lo

54
00:05:02,400 --> 00:05:06,750
siguiente local Storage utilizamos el objeto del local electoras

55
00:05:09,560 --> 00:05:10,680
puntos editen

56
00:05:13,460 --> 00:05:20,390
y le ponemos la clave que va a tener el nombre que va a tener por ejemplo el título y el valor que va

57
00:05:20,390 --> 00:05:33,170
a tener un curso de Simphony de Víctor Robles por ejemplo vale así de simple.

58
00:05:33,170 --> 00:05:38,150
De esta manera yo ya estoy guardando un elemento en el local histora vamos a verlo si actualizo la pantalla

59
00:05:38,430 --> 00:05:39,200
ya guarda.

60
00:05:39,220 --> 00:05:48,290
Si yo me voy a Application mirá lo que tengo aquí título voy a reducir esto a ver si lo hago un poco

61
00:05:48,290 --> 00:05:53,270
más pequeño tengo el key.

62
00:05:53,400 --> 00:06:01,230
Esto no me interesa vista aquí pero bueno tengo la key que es título y el valor curso de Simphony interés

63
00:06:01,250 --> 00:06:06,680
de visitarlo Rule si actualizo la pantalla pues esto sigue estando igual porque la aquelles título y

64
00:06:06,740 --> 00:06:12,440
este es el valor si yo esto lo cambio de nombre y actualizo la pantalla ahora sí que se me añade el

65
00:06:12,440 --> 00:06:18,530
nuevo elemento el nuevo índice que yo estoy añadiendo a nivel de código vale de esa manera yo añado

66
00:06:18,590 --> 00:06:20,940
un valor al local.

67
00:06:21,680 --> 00:06:25,580
Ahora cómo puedo recuperar un elemento de este tipo recuperar

68
00:06:28,280 --> 00:06:35,490
elemento y meterlo en mi página web por ejemplo meterlo aquí en esta etiqueta.

69
00:06:35,990 --> 00:06:38,420
Vale pues muy sencillo puedo hacer lo siguiente.

70
00:06:38,420 --> 00:06:44,740
Locales torax accedo al objeto local Torak y accedo al método con el punto Get item.

71
00:06:44,750 --> 00:06:50,360
De esta manera consigo un elemento el local lectora qué elemento quiero le pongo su nombre de su índice.

72
00:06:50,360 --> 00:06:55,000
En este caso el título es el nombre de la clave.

73
00:06:55,040 --> 00:07:04,040
De esa manera yo si aún con solo de esto tengo ese valor que tengo guardado en el local esto que tengo

74
00:07:04,040 --> 00:07:06,710
guardado en la memoria de mi navegador.

75
00:07:06,860 --> 00:07:13,130
Si me voy a consola y actualizo la pantalla efectivamente me aparece esto y si yo quiero meterlo a mí

76
00:07:13,640 --> 00:07:19,730
en el cuerpo de mi página web pues puedo hacer document punto y selector

77
00:07:24,360 --> 00:07:34,620
selecciono el dip que yo tengo en este caso películas y puedo hacer un INER HTML y de esta manera jumento

78
00:07:34,620 --> 00:07:39,020
el valor que tengo en mi índice del local torax en mi página web.

79
00:07:39,030 --> 00:07:43,650
Efectivamente hoy lo acabo de meter en mi web sin ningún tipo de problema.

80
00:07:43,850 --> 00:07:51,150
Bien ahora hemos visto como guardar simplemente un string un texto normal pero imagínate que yo quiero

81
00:07:51,150 --> 00:07:53,630
guardar un objeto en el local storage.

82
00:07:54,070 --> 00:07:55,980
Vale guardar objetos

83
00:07:59,670 --> 00:08:02,820
que guarda un objeto Jayson en mi loca lectoras.

84
00:08:02,820 --> 00:08:09,300
Lo lógico lo que se me ocurrió cualkier lo que se le ocurriría a cualquier persona crear una variable

85
00:08:09,300 --> 00:08:16,130
que se llamara usuario y aquí tener mi objeto Yeison no creó un objeto con sus propiedades apropiada

86
00:08:16,200 --> 00:08:16,830
nombre

87
00:08:21,010 --> 00:08:22,360
el e-mail

88
00:08:29,140 --> 00:08:30,540
y la web.

89
00:08:30,660 --> 00:08:37,010
Estos acuerdos de separarlo todo por comas.

90
00:08:37,420 --> 00:08:43,660
Vale pues yo tengo mi objeto de JavaScript mi objeto Jayson aquí definido ahora pues a mi se me ocurriría

91
00:08:43,720 --> 00:08:47,230
hacer un locales torax apuntó.

92
00:08:47,340 --> 00:08:54,960
Item le voy a decir que se va a llamar usuario mi índice Micay del locales Torán mi clave local vector

93
00:08:54,960 --> 00:08:59,950
a mi elemento y le voy a pasar el objeto usuario.

94
00:08:59,950 --> 00:09:07,260
Eso es lo que se me ocurriría a simple vista pero claro yo hago esto me voy a Application y tengo otro

95
00:09:07,720 --> 00:09:12,850
usuario Objet obtiene de forma que no se me han guardado bien los datos para ello puedo borrarlo todo

96
00:09:13,000 --> 00:09:15,650
de aquí sin ningún tipo de problema.

97
00:09:15,700 --> 00:09:16,680
Entonces qué pasa.

98
00:09:16,680 --> 00:09:21,970
Pues que en el local de storage tanto en el local electoras como para enviar información por post o

99
00:09:21,970 --> 00:09:28,780
para enviar información a una API y tal suele ser necesario convertir esos datos que están viajando

100
00:09:28,780 --> 00:09:34,390
o que se están guardando en el local lectoras es necesario suele ser necesario convertirlos a un string

101
00:09:34,720 --> 00:09:40,420
porque esa es la manera en la cual se pueden enviar datos via HTTP no.

102
00:09:41,020 --> 00:09:49,300
Normalmente no se suelen enviar datos en Jayson puro suelen ir convertido a un Jayson string y lo mismo

103
00:09:49,360 --> 00:09:55,900
cuando nosotros guardamos un dato en el local pastoras tiene que ser un string o un número obligatoriamente

104
00:09:56,200 --> 00:10:03,640
así que tenemos que convertir este objeto en Jayson de JavaScript aún ya hizo una string normal de acuerdo

105
00:10:03,640 --> 00:10:06,160
a un objeto Jayson en formato de string.

106
00:10:06,160 --> 00:10:07,160
Cómo hago eso.

107
00:10:07,180 --> 00:10:12,160
Pues para eso hay un objeto en el lenguaje de JavaScript que se llama Jayson y puedo acceder a varios

108
00:10:12,160 --> 00:10:21,470
métodos que tiene uno de ellos es el string y Foy ya hizo un punto Eckstein y Fari string y de esa manera

109
00:10:21,470 --> 00:10:27,590
yo convierto mi objeto a un Jayson string en locales torax no permite guardar un objeto de JavaScript

110
00:10:28,260 --> 00:10:31,620
en formato nativo en formato puro.

111
00:10:31,800 --> 00:10:38,300
Ahora actualizo la pantalla me falta aquí un paréntesis efectivamente que fue un paréntesis.

112
00:10:38,300 --> 00:10:42,640
Guardo actualizo la pantalla si me voy ya aplica.

113
00:10:42,650 --> 00:10:44,920
Aquí me aparece ya mi objeto completo.

114
00:10:44,960 --> 00:10:52,160
Vale fíjate que aquí está todo y además ya lo interpreta el propio el propio navegador como que esto

115
00:10:52,160 --> 00:10:58,790
es un Jayson string y ya lo decodifica aquí y no formatear la información mucho mejor así que la manera

116
00:10:59,060 --> 00:11:05,900
correcta tanto de guardar cosas en el local electoral sería convenciéndola a un Jayson string y también

117
00:11:06,050 --> 00:11:07,970
la manera correcta de enviar datos a una API.

118
00:11:07,970 --> 00:11:13,970
Eso lo veremos después será enviando la información en un Jayson string para que viaje de una manera

119
00:11:13,970 --> 00:11:15,800
mucho más óptima.

120
00:11:16,130 --> 00:11:20,430
Y de esta manera es como hay que hacerlo para guardar objetos en el local estolas.

121
00:11:20,570 --> 00:11:23,150
Ahora imagínate que tú quieres recuperar ese objeto.

122
00:11:23,240 --> 00:11:27,160
Vale recuperar objetos.

123
00:11:27,830 --> 00:11:33,080
Imagínate que quieres recuperar el objeto del local lectoras pero claro no sabes cómo porque ese objeto

124
00:11:33,080 --> 00:11:33,940
es un Jayson.

125
00:11:33,980 --> 00:11:37,170
Entonces cuando lo recuperamos vamos a ver lo que pasa.

126
00:11:37,210 --> 00:11:44,990
Vale si nosotros recuperamos del local histora hacemos un item y seleccionamos el elemento usuario.

127
00:11:45,050 --> 00:11:46,250
Si hacemos un consuelo

128
00:11:49,610 --> 00:11:50,390
vamos a ver

129
00:11:55,870 --> 00:12:03,220
que esto es un string no es un objeto como tal yo no puedo hacer puntos nombre punto y mail.

130
00:12:03,220 --> 00:12:05,410
Yo no puedo hacer eso porque realmente es un string.

131
00:12:05,800 --> 00:12:12,210
Entonces cómo hacer para convertir ese Jayson string en un Jayson usable por JavaScript.

132
00:12:12,240 --> 00:12:21,510
Pues para eso tenemos un método que se llama Jayson toparse con el Jayson punto Parse.

133
00:12:21,510 --> 00:12:28,240
Yo lo que hago es falsear o convertir el Jayson string que tengo aquí un string de Yeison en un objeto

134
00:12:28,240 --> 00:12:37,500
de JavaScript usable y esto lo voy a guardar en una variable que se llame user J.S user JS Por ejemplo.

135
00:12:37,520 --> 00:12:39,840
Vale y entonces siguió un consuelo.

136
00:12:39,920 --> 00:12:48,130
JS voy a tener acceso a él sin ningún tipo de problema actualizo la pantalla.

137
00:12:48,130 --> 00:12:55,870
Aquí me falta un carácter exactamente lo borro actualizo la pantalla aquí aparece mi objeto de JavaScript

138
00:12:55,930 --> 00:13:02,530
completamente usable de forma que yo podría coger y hacer un documento encoleriza el lector de películas

139
00:13:02,620 --> 00:13:14,920
y añadirle un elemento añadirle hacerle un APEN de un punto Jota Jota ese punto y me apuntó Webb por

140
00:13:14,920 --> 00:13:23,640
ejemplo ha vuelto actualizo la pantalla y aquí me añade Mi elemento de acuerdo sin ningún tipo de problema

141
00:13:26,750 --> 00:13:36,340
mal podría yo aquí concatenar la cosa despacio podría concatenar y podría darle también el nombre o

142
00:13:36,380 --> 00:13:39,680
lo que yo quisiera podría hacer lo que yo quisiera lo que se me ocurriera

143
00:13:42,370 --> 00:13:51,860
Valeo crear una etiqueta aquí que luego sería nombre J.S punto nombre perfecto.

144
00:13:52,320 --> 00:13:55,290
Vale generar aquí me aparecen los datos.

145
00:13:55,290 --> 00:13:59,540
Incluso podría quedar aquí etiqueta y cargar dentro la información es decir yo ya tengo aquí dentro

146
00:13:59,540 --> 00:14:04,970
de J.V un objeto con toda la información accesible como estamos viendo ahora mismo.

147
00:14:04,970 --> 00:14:10,410
Nosotros tenemos aquí en nuestra página web datos que salen del local actoras qué es esto de aquí vale.

148
00:14:10,440 --> 00:14:20,930
Es estoy aquí que yo estoy utilizando puedo poner otro Dib por aquí abajo con ideas datos y ahí cargar

149
00:14:20,930 --> 00:14:21,730
esa información

150
00:14:25,000 --> 00:14:26,100
vamos a hacerlo

151
00:14:28,890 --> 00:14:30,030
por aquí datos

152
00:14:36,230 --> 00:14:45,000
mira esta información sale de El Local estolas de forma que si yo vacío el local Storage si lo vacío

153
00:14:45,090 --> 00:14:47,890
y actualizo la pantalla volverá a salir porque lo vuelvo a crear.

154
00:14:47,970 --> 00:14:54,150
Vale lo estoy volviendo a crear lo estoy volviendo a crear porque automáticamente se crea pero yo puedo

155
00:14:54,150 --> 00:14:56,020
borrar esa memoria.

156
00:14:56,340 --> 00:15:04,050
Vale yo puedo borrar esos elementos que yo tengo en el local actoras de manera muy sencilla puedo utilizar

157
00:15:05,090 --> 00:15:18,050
el local torax punto remove item y puedo borrar el elemento user o usuario balet.

158
00:15:18,570 --> 00:15:23,280
Así de sencillo de forma que si yo estoy hizo la pantalla aquí se me muestra la información porque se

159
00:15:23,280 --> 00:15:28,470
ha ejecutado en cascada digamos de arriba abajo y se ha ejecutado el código pero cuando llegaba aquí

160
00:15:28,470 --> 00:15:35,550
abajo me acaba de eliminar el usuario del local histora me acuerdo ya no tengo ese índice y si utilizo

161
00:15:35,700 --> 00:15:42,170
el método local Storage Clear lo que hace es todo el lectora dejando que se actualice la pantalla como

162
00:15:42,190 --> 00:15:48,030
esto se está ejecutando de arriba abajo me muestra este contenido cuando está disponible pero como ya

163
00:15:48,120 --> 00:15:54,720
no está al final lo ha borrado pues ya no aparece aquí en el local Storage de forma que aquí sí que

164
00:15:54,720 --> 00:15:58,220
me aparece pero porque se ejecutaba antes.

165
00:15:58,750 --> 00:16:05,460
Entonces con esta información yo ya podría hacer un cruce con el local lector a guardar datos borrar

166
00:16:05,460 --> 00:16:12,450
datos etcétera e inclusive utilizar los eventos para guardar información en el local Storage y tal pero

167
00:16:12,450 --> 00:16:17,020
de momento con la información que tenemos aquí creo que nos sirve para entender que es el local storage.

168
00:16:17,040 --> 00:16:24,300
Cómo funcionan los objetos Jayson como guardarlos como convertirlo a Trini como decodificar para que

169
00:16:24,300 --> 00:16:26,760
sea un objeto de JavaScript usable.
